[{"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\index.js":"1","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\App.js":"2","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\NavigationBar.js":"3","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Home.js":"4","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\SignUp.js":"5","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\NotFound.js":"6","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\contexts\\AuthContext.js":"7","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\firebase\\index.js":"8","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\AuthRoute.js":"9","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Login.js":"10","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Logout.js":"11","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Albums.js":"12","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\CreateAlbum.js":"13","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\CustomerAlbum.js":"14","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Photo.js":"15","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\hooks\\useDeleteFile.js":"16","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\hooks\\useAlbums.js":"17","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Album.js":"18","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\hooks\\useUploadAlbum.js":"19","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\hooks\\useAlbum.js":"20"},{"size":282,"mtime":1609782889788,"results":"21","hashOfConfig":"22"},{"size":1548,"mtime":1610195760829,"results":"23","hashOfConfig":"22"},{"size":2297,"mtime":1610042632018,"results":"24","hashOfConfig":"22"},{"size":447,"mtime":1609864362519,"results":"25","hashOfConfig":"22"},{"size":2808,"mtime":1609863919952,"results":"26","hashOfConfig":"22"},{"size":144,"mtime":1609783532681,"results":"27","hashOfConfig":"22"},{"size":1517,"mtime":1609863113083,"results":"28","hashOfConfig":"22"},{"size":722,"mtime":1609786746003,"results":"29","hashOfConfig":"22"},{"size":336,"mtime":1609851866946,"results":"30","hashOfConfig":"22"},{"size":2256,"mtime":1609868739670,"results":"31","hashOfConfig":"22"},{"size":506,"mtime":1609860024180,"results":"32","hashOfConfig":"22"},{"size":5429,"mtime":1610199781608,"results":"33","hashOfConfig":"22"},{"size":4124,"mtime":1610284853419,"results":"34","hashOfConfig":"22"},{"size":111,"mtime":1609874321746,"results":"35","hashOfConfig":"22"},{"size":1263,"mtime":1610281573262,"results":"36","hashOfConfig":"22"},{"size":628,"mtime":1610120447531,"results":"37","hashOfConfig":"22"},{"size":1116,"mtime":1610122872775,"results":"38","hashOfConfig":"22"},{"size":1342,"mtime":1610285628828,"results":"39","hashOfConfig":"22"},{"size":2102,"mtime":1610284512631,"results":"40","hashOfConfig":"22"},{"size":1453,"mtime":1610285646795,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1pkc9nl",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\index.js",[],["89","90"],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\App.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\NavigationBar.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Home.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\SignUp.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\NotFound.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\contexts\\AuthContext.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\firebase\\index.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\AuthRoute.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Login.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Logout.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Albums.js",["91"],"import { useState } from 'react';\r\nimport { FadeLoader } from 'react-spinners';\r\nimport { Button, Card, Col, Row } from 'react-bootstrap';\r\nimport useAlbums from '../hooks/useAlbums';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Albums = () => {\r\n\r\n    const { albums, loading } = useAlbums();\r\n\r\n    return (  \r\n        <div>\r\n            <h1 className=\"text-center\">Mina album</h1>\r\n\r\n            {\r\n                loading\r\n                    ? (<div className=\"d-flex justify-content-center my-5\"><FadeLoader color={'#576675'} size={50}/></div>)\r\n                    \r\n                    : albums.length === 0 \r\n                        ? (\r\n                            <div className=\"text-center my-5\">\r\n                                <p>Du har inga album för närvarande</p>\r\n                                <Link className=\"btn btn-primary\" to=\"/albums/create-album\">Skapa album</Link>\r\n                            </div>\r\n                            )\r\n                        \r\n                        : (<Row>\r\n                            {albums.map(album => (\r\n                                <Col sm={6} md={4} lg={3} key={album.id}>                                \r\n                                    <Card className=\"mb-3\">\r\n                                        <Card.Img variant=\"top\" src=\"https://image.shutterstock.com/image-vector/no-image-available-icon-template-600w-1036735678.jpg\"/>\r\n                                        <Card.Body>\r\n                                            <Card.Title className=\"text-center\">{album.albumTitle}</Card.Title>\r\n                                            <Card.Text>Länk till kund: 1234</Card.Text>\r\n                                            <Link to={`/albums/${album.id}`}>\r\n                                                <Button variant=\"primary\" size=\"sm\">Till album</Button>\r\n                                            </Link>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                            ))}\r\n                        </Row>)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Albums;\r\n\r\n\r\n/* import { useEffect, useState } from 'react';\r\nimport { FadeLoader } from 'react-spinners';\r\nimport { Button, Card, Col, Row } from 'react-bootstrap';\r\nimport { db } from '../firebase';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst Albums = () => {\r\n    const [albums, setAlbums] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const { currentUser } = useAuth();\r\n\r\n    useEffect(() => {\r\n        //subscribe to album snapshots from firebase to update component whenever something changes\r\n        const unsubscribe = db.collection('albums')\r\n            .where('owner', '==', currentUser.uid)\r\n            .orderBy('albumTitle')\r\n            .onSnapshot(snapshot => {\r\n                setLoading(true);\r\n                const snapshotAlbums = [];\r\n\r\n                snapshot.forEach(doc => {\r\n                    snapshotAlbums.push({\r\n                        id: doc.id,\r\n                        ...doc.data()\r\n                    });\r\n                });\r\n\r\n                setAlbums(snapshotAlbums);\r\n                setLoading(false);\r\n        });\r\n\r\n        return unsubscribe;\r\n    }, [currentUser.uid])\r\n\r\n    return (  \r\n        <div>\r\n            <h1 className=\"text-center\">Mina album</h1>\r\n\r\n                {\r\n                    loading\r\n                        ? (<div className=\"d-flex justify-content-center my-5\"><FadeLoader color={'#576675'} size={50}/></div>)\r\n                        \r\n                        : albums.length === 0 \r\n                            ? (\r\n                                <div className=\"text-center my-5\">\r\n                                    <p>Du har inga album för närvarande</p>\r\n                                    <Link className=\"btn btn-primary\" to=\"/albums/create-album\">Skapa album</Link>\r\n                                </div>\r\n                              )\r\n                            \r\n                            : (<Row>\r\n                                {albums.map(album => (\r\n                                    <Col sm={6} md={4} lg={3} key={album.id}>                                \r\n                                            <Card className=\"mb-3\">\r\n                                                <Card.Img variant=\"top\" src=\"https://image.shutterstock.com/image-vector/no-image-available-icon-template-600w-1036735678.jpg\"/>\r\n                                                <Card.Body>\r\n                                                    <Card.Title className=\"text-center\">{album.albumTitle}</Card.Title>\r\n                                                    <Card.Text>Länk till kund: 1234</Card.Text>\r\n                                                    <Link to={`/albums/${album.id}`}>\r\n                                                        <Button variant=\"primary\" size=\"sm\">Till album</Button>\r\n                                                    </Link>\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>)\r\n                }\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Albums; */","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\CreateAlbum.js",["92","93"],"import { Alert, Button, Card, Col, Form, ProgressBar, Row } from 'react-bootstrap';\r\nimport { FadeLoader } from 'react-spinners';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { useState, useCallback } from 'react';\r\nimport useUploadAlbum from '../hooks/useUploadAlbum';\r\n\r\nconst CreateAlbum = () => {\r\n\r\n    const [uploadedFiles, setUploadedFiles] = useState([]);\r\n    const [submit, setSubmit] = useState(null);\r\n    \r\n    const [albumTitle, setAlbumTitle] = useState('');\r\n    const { error, loading } = useUploadAlbum(albumTitle, uploadedFiles, submit)\r\n\r\n    const handleChangeTitle = (e) => {\r\n        setAlbumTitle(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if(uploadedFiles.length === 0){\r\n            return;\r\n        }\r\n        setSubmit(true);\r\n        \r\n    }\r\n\r\n    //Dropzone\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        if(acceptedFiles.length === 0){\r\n            return;\r\n        }\r\n       \r\n        setUploadedFiles(files => [...files, acceptedFiles[0]]);\r\n\r\n    }, []);\r\n\r\n    const { getRootProps, getInputProps, isDragActive, acceptedFiles, isDragAccept, isDragReject } = useDropzone({\r\n        accept: 'image/jpeg, image/png',\r\n        onDrop\r\n    });\r\n\r\n    return (  \r\n        <div>\r\n\r\n            {\r\n                loading && (<div className=\"d-flex justify-content-center my-5\"><FadeLoader color={'#576675'} size={50}/></div>)\r\n            }\r\n            \r\n\r\n           <Row>\r\n                <Col md={{ span: 6, offset: 3}}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>\r\n                                Skapa album\r\n                            </Card.Title>\r\n\r\n                            {error && (<Alert variant=\"danger\">{error}</Alert>)}\r\n\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group id=\"title\">\r\n                                    <Form.Label>Albumtitel</Form.Label>\r\n                                    <Form.Control type=\"title\" value={albumTitle} required onChange={handleChangeTitle}/>\r\n\r\n\r\n                                    <div {...getRootProps()} id=\"dropzone-wrapper\" className={`px-4 py-4 my-3 ${isDragAccept ? `drag-accept` : ``} ${isDragReject ? `drag-reject` : ``}`}>\r\n                                        <input {...getInputProps()} />\r\n                                            {\r\n                                                isDragActive \r\n                                                    ? isDragAccept \r\n                                                        ? (<p>Just drop it already</p>) \r\n                                                        : (<p>Sorry, not the right file type</p>)\r\n                                                    : (<p>Give me some filez</p>) \r\n                                            }      \r\n                                    </div>\r\n                                    \r\n                                </Form.Group>\r\n\r\n                                {\r\n                                    uploadedFiles && uploadedFiles.length !== 0 && (\r\n                                        <div className=\"accepted-files mt-2\">\r\n                                            <ul className=\"list-unstyled\">\r\n                                                {uploadedFiles.map(file => (\r\n                                                    <li key={file.name}>\r\n                                                        {file.name}\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>   \r\n                                        </div>\r\n                                    )\r\n                                } \r\n\r\n                                <Button disabled={loading} type=\"submit\">Skapa album</Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default CreateAlbum;","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\CustomerAlbum.js",[],["94","95"],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Photo.js",["96"],"import { Button, Card, Col, Form  } from 'react-bootstrap';\r\nimport { useState } from 'react';\r\n//import useDeleteFile from '../hooks/useDeleteFile'\r\n\r\nconst Photo = ({photo}) => {\r\n    //const [deletePhoto, setDeletePhoto] = useState(null);\r\n    //useDeleteFile(deletePhoto);\r\n\r\n    const handleDeletePhoto = () => {\r\n        //setDeletePhoto(photo);\r\n    }\r\n\r\n    const handleCheckBox = (e) => {\r\n        console.log('someone wants to check me out');\r\n        console.log(e.target);\r\n    }\r\n\r\n    return (  \r\n        <Col sm={6} md={4} lg={3}>                                \r\n            <Card className=\"mb-3\">\r\n                <a href={photo.fileUrl} title=\"View image\" data-attribute=\"SRL\">\r\n                    <Card.Img variant=\"top\" src={photo.fileUrl}/>\r\n                </a>\r\n                <Card.Body>\r\n                <Form>\r\n                    <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Välj\" onChange={handleCheckBox}/>\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n                    <Button variant=\"danger\" size=\"sm\" onClick={handleDeletePhoto}>Radera</Button>\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n    );\r\n}\r\n \r\nexport default Photo;","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\hooks\\useDeleteFile.js",[],["97","98"],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\hooks\\useAlbums.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Album.js",["99","100","101","102","103"],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\hooks\\useUploadAlbum.js",["104"],"import { db, storage } from '../firebase';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst useUploadAlbum = (albumTitle, uploadedFiles, submit) => {\r\n\r\n    const [error, setError ] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const { currentUser } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n\r\n        if(uploadedFiles.length === 0){\r\n            return;\r\n        }\r\n\r\n        const album = {\r\n            albumTitle,\r\n            owner: currentUser.uid,\r\n        }\r\n\r\n        const albumRef = storage.ref(`${albumTitle}`);\r\n\r\n        const promises = uploadedFiles.map(async uploadedFile => {\r\n            setLoading(true);\r\n\r\n            try {\r\n\r\n                const fileRef = albumRef.child(`/${uploadedFile.name}`);\r\n                const snapshot = await fileRef.put(uploadedFile);    \r\n                \r\n                const url = await snapshot.ref.getDownloadURL();\r\n\r\n                const photo = {\r\n                    name: uploadedFile.name,\r\n                    albumTitle,\r\n                    path: snapshot.ref.fullPath,\r\n                    owner: currentUser.uid,\r\n                    fileUrl: url, \r\n                    type: uploadedFile.type,\r\n                    size: uploadedFile.size\r\n                }\r\n\r\n                const result = await db.collection('photos').add(photo);\r\n\r\n                return new Promise((resolve, reject) => {resolve(result)})\r\n\r\n            } catch(error) {\r\n                setError(error.message);\r\n            }\r\n\r\n        })\r\n\r\n        Promise.all(promises)\r\n            .then(() => {\r\n                db.collection('albums').add(album)\r\n                .then(doc => {\r\n                    setLoading(false);\r\n                    navigate(`/albums/${doc.id}`);\r\n                });\r\n            }).catch (error => {\r\n                setError(error.message);\r\n            });\r\n\r\n    }, [submit]);\r\n\r\n    return { error, loading };\r\n}\r\n\r\nexport default useUploadAlbum;\r\n","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\hooks\\useAlbum.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":1,"column":10,"nodeType":"111","messageId":"112","endLine":1,"endColumn":18},{"ruleId":"109","severity":1,"message":"113","line":1,"column":42,"nodeType":"111","messageId":"112","endLine":1,"endColumn":53},{"ruleId":"109","severity":1,"message":"114","line":39,"column":56,"nodeType":"111","messageId":"112","endLine":39,"endColumn":69},{"ruleId":"105","replacedBy":"115"},{"ruleId":"107","replacedBy":"116"},{"ruleId":"109","severity":1,"message":"110","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":18},{"ruleId":"105","replacedBy":"117"},{"ruleId":"107","replacedBy":"118"},{"ruleId":"109","severity":1,"message":"119","line":1,"column":21,"nodeType":"111","messageId":"112","endLine":1,"endColumn":32},{"ruleId":"109","severity":1,"message":"120","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":19},{"ruleId":"109","severity":1,"message":"110","line":2,"column":21,"nodeType":"111","messageId":"112","endLine":2,"endColumn":29},{"ruleId":"109","severity":1,"message":"121","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":12},{"ruleId":"109","severity":1,"message":"122","line":6,"column":10,"nodeType":"111","messageId":"112","endLine":6,"endColumn":17},{"ruleId":"123","severity":1,"message":"124","line":67,"column":8,"nodeType":"125","endLine":67,"endColumn":16,"suggestions":"126"},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ProgressBar' is defined but never used.","'acceptedFiles' is assigned a value but never used.",["127"],["128"],["127"],["128"],"'useNavigate' is defined but never used.","'useEffect' is defined but never used.","'db' is defined but never used.","'useAuth' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'albumTitle', 'currentUser.uid', 'navigate', and 'uploadedFiles'. Either include them or remove the dependency array.","ArrayExpression",["129"],"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},"Update the dependencies array to be: [albumTitle, currentUser.uid, navigate, submit, uploadedFiles]",{"range":"132","text":"133"},[2019,2027],"[albumTitle, currentUser.uid, navigate, submit, uploadedFiles]"]