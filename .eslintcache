[{"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\index.js":"1","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\App.js":"2","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\NavigationBar.js":"3","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Home.js":"4","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\SignUp.js":"5","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\NotFound.js":"6","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\contexts\\AuthContext.js":"7","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\firebase\\index.js":"8","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\AuthRoute.js":"9","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Login.js":"10","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Logout.js":"11","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Albums.js":"12","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\CreateAlbum.js":"13","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\CustomerAlbum.js":"14","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Photo.js":"15","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\hooks\\useDeleteFile.js":"16","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\hooks\\useAlbums.js":"17","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Album.js":"18","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\hooks\\useUploadAlbum.js":"19","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\hooks\\useAlbum.js":"20","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\CustomerPhoto.js":"21","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\ShowPreviewCustomerAlbum.js":"22","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\PreviewPhoto.js":"23","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\CustomerConfirmation.js":"24","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\EditAlbum.js":"25","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\AccessDenied.js":"26"},{"size":282,"mtime":1609782889788,"results":"27","hashOfConfig":"28"},{"size":2221,"mtime":1610569829864,"results":"29","hashOfConfig":"28"},{"size":2316,"mtime":1610572532121,"results":"30","hashOfConfig":"28"},{"size":403,"mtime":1610562450359,"results":"31","hashOfConfig":"28"},{"size":2871,"mtime":1610563553560,"results":"32","hashOfConfig":"28"},{"size":782,"mtime":1610560568693,"results":"33","hashOfConfig":"28"},{"size":1452,"mtime":1610371102196,"results":"34","hashOfConfig":"28"},{"size":722,"mtime":1609786746003,"results":"35","hashOfConfig":"28"},{"size":336,"mtime":1609851866946,"results":"36","hashOfConfig":"28"},{"size":3136,"mtime":1610575544242,"results":"37","hashOfConfig":"28"},{"size":506,"mtime":1609860024180,"results":"38","hashOfConfig":"28"},{"size":4056,"mtime":1610556010367,"results":"39","hashOfConfig":"28"},{"size":4111,"mtime":1610447703800,"results":"40","hashOfConfig":"28"},{"size":3004,"mtime":1610457852376,"results":"41","hashOfConfig":"28"},{"size":956,"mtime":1610468078928,"results":"42","hashOfConfig":"28"},{"size":628,"mtime":1610120447531,"results":"43","hashOfConfig":"28"},{"size":1116,"mtime":1610465125750,"results":"44","hashOfConfig":"28"},{"size":7189,"mtime":1610528574345,"results":"45","hashOfConfig":"28"},{"size":2102,"mtime":1610369646771,"results":"46","hashOfConfig":"28"},{"size":1723,"mtime":1610538484113,"results":"47","hashOfConfig":"28"},{"size":1690,"mtime":1610390723155,"results":"48","hashOfConfig":"28"},{"size":3281,"mtime":1610561946339,"results":"49","hashOfConfig":"28"},{"size":462,"mtime":1610568599022,"results":"50","hashOfConfig":"28"},{"size":585,"mtime":1610389816662,"results":"51","hashOfConfig":"28"},{"size":6444,"mtime":1610526037478,"results":"52","hashOfConfig":"28"},{"size":225,"mtime":1610476884312,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1pkc9nl",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\index.js",[],["115","116"],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\App.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\NavigationBar.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Home.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\SignUp.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\NotFound.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\contexts\\AuthContext.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\firebase\\index.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\AuthRoute.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Login.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Logout.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Albums.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\CreateAlbum.js",["117"],"import { Alert, Button, Card, Col, Form, Row } from 'react-bootstrap';\r\nimport { FadeLoader } from 'react-spinners';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { useState, useCallback } from 'react';\r\nimport useUploadAlbum from '../hooks/useUploadAlbum';\r\n\r\nconst CreateAlbum = () => {\r\n\r\n    const [uploadedFiles, setUploadedFiles] = useState([]);\r\n    const [submit, setSubmit] = useState(null);\r\n    \r\n    const [albumTitle, setAlbumTitle] = useState('');\r\n    const { error, loading } = useUploadAlbum(albumTitle, uploadedFiles, submit)\r\n\r\n    const handleChangeTitle = (e) => {\r\n        setAlbumTitle(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if(uploadedFiles.length === 0){\r\n            return;\r\n        }\r\n        setSubmit(true);\r\n        \r\n    }\r\n\r\n    //Dropzone\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        if(acceptedFiles.length === 0){\r\n            return;\r\n        }\r\n       \r\n        setUploadedFiles(files => [...files, acceptedFiles[0]]);\r\n\r\n    }, []);\r\n\r\n    const { getRootProps, getInputProps, isDragActive, acceptedFiles, isDragAccept, isDragReject } = useDropzone({\r\n        accept: 'image/jpeg, image/png',\r\n        onDrop\r\n    });\r\n\r\n    return (  \r\n        <div>\r\n\r\n            {\r\n                loading && (<div className=\"d-flex justify-content-center my-5\"><FadeLoader color={'#576675'} size={50}/></div>)\r\n            }\r\n            \r\n\r\n           <Row>\r\n                <Col md={{ span: 6, offset: 3}}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>\r\n                                Skapa album\r\n                            </Card.Title>\r\n\r\n                            {error && (<Alert variant=\"danger\">{error}</Alert>)}\r\n\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group id=\"title\">\r\n                                    <Form.Label>Albumtitel</Form.Label>\r\n                                    <Form.Control type=\"title\" value={albumTitle} required onChange={handleChangeTitle}/>\r\n\r\n\r\n                                    <div {...getRootProps()} id=\"dropzone-wrapper\" className={`px-4 py-4 my-3 ${isDragAccept ? `drag-accept` : ``} ${isDragReject ? `drag-reject` : ``}`}>\r\n                                        <input {...getInputProps()} />\r\n                                            {\r\n                                                isDragActive \r\n                                                    ? isDragAccept \r\n                                                        ? (<p>Just drop it already</p>) \r\n                                                        : (<p>Sorry, not the right file type</p>)\r\n                                                    : (<p>Give me some filez</p>) \r\n                                            }      \r\n                                    </div>\r\n                                    \r\n                                </Form.Group>\r\n\r\n                                {\r\n                                    uploadedFiles && uploadedFiles.length !== 0 && (\r\n                                        <div className=\"accepted-files mt-2\">\r\n                                            <ul className=\"list-unstyled\">\r\n                                                {uploadedFiles.map(file => (\r\n                                                    <li key={file.name}>\r\n                                                        {file.name}\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>   \r\n                                        </div>\r\n                                    )\r\n                                } \r\n\r\n                                <Button disabled={loading} type=\"submit\">Skapa album</Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default CreateAlbum;","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\CustomerAlbum.js",["118"],"import CustomerPhoto from './CustomerPhoto';\r\nimport { SRLWrapper } from 'simple-react-lightbox';\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport { useState, useEffect } from 'react';\r\nimport { FadeLoader } from 'react-spinners';\r\nimport { useParams } from 'react-router-dom';\r\nimport useAlbum from '../hooks/useAlbum';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst CustomerAlbum = () => {\r\n    const { albumId, ownerId } = useParams();\r\n    //const [loading, setLoading] = useState(true);\r\n    const { photos, albumTitle, loading } = useAlbum(albumId, ownerId);\r\n    const navigate = useNavigate();\r\n\r\n    const [likedPhotos, setLikedPhotos] = useState(photos);\r\n    const [disLikedPhotos, setDisLikedPhotos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setLikedPhotos(photos);\r\n    }, [photos]);\r\n\r\n    const handleReviewButtons = (review, photoId) => {\r\n\r\n        if(review === 'dislike') {\r\n            const updatedPhotos = likedPhotos.filter(photo => photo.id !== photoId);\r\n            setLikedPhotos(updatedPhotos);\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmitToPreview = () => {\r\n\r\n        if(likedPhotos.length === 0){\r\n            alert('Du måste välja minst ett foto')\r\n            console.log('You have to choose at least one photo');\r\n            return;\r\n        }\r\n\r\n        const spreaded = [...likedPhotos, ...photos];\r\n        const dislikedPhotos = spreaded.filter(el => {\r\n            return !(likedPhotos.includes(el) && photos.includes(el));\r\n        });\r\n\r\n        setDisLikedPhotos(dislikedPhotos);\r\n\r\n        navigate(`/${ownerId}/review/preview/${albumId}`, {state: {likedPhotos, dislikedPhotos, albumTitle, total: photos.length}});\r\n    }\r\n\r\n    return (  \r\n        <div className=\"text-center\">\r\n            <h1 className=\"text-center my-4\">{albumTitle}</h1>\r\n            \r\n                    {\r\n                        loading\r\n                            ? (<div className=\"d-flex justify-content-center my-5\"><FadeLoader color={'#576675'} size={50}/></div>)\r\n                            \r\n                            : (\r\n\r\n                                <SRLWrapper>\r\n                                    <Row className=\"mb-5\">\r\n                                    {photos.map(photo => (\r\n                                            <CustomerPhoto photo={photo} key={photo.id}  handleReviewButtons={handleReviewButtons}/>\r\n                                        ))}\r\n                                    \r\n                                    </Row>\r\n                                </SRLWrapper>\r\n\r\n                            )\r\n                    }\r\n\r\n                    <Row>\r\n                        <Col md={{ span: 6, offset: 3}}>\r\n                            <Form>\r\n                                <Button onClick={handleSubmitToPreview}>Förhandsgranska</Button>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default CustomerAlbum;","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Photo.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\hooks\\useDeleteFile.js",[],["119","120"],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\hooks\\useAlbums.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Album.js",["121"],"import { useParams } from 'react-router-dom';\r\nimport { FadeLoader } from 'react-spinners';\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport Photo from './Photo';\r\nimport { SRLWrapper } from 'simple-react-lightbox';\r\nimport useAlbum from '../hooks/useAlbum';\r\nimport { useState } from 'react';\r\nimport { db, storage } from '../firebase';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Album = () => {\r\n    const { currentUser } = useAuth();\r\n    const { albumId } = useParams();\r\n    const { albumTitle, loading, setLoading, photos } = useAlbum(albumId, currentUser.uid);\r\n    const [newAlbumTitle, setNewAlbumTitle] = useState('');\r\n    const [pickedPhotos, setPickedPhotos] = useState([]);\r\n    const [customerLink, setCustomerLink] = useState('');\r\n\r\n\r\n    const [error, setError ] = useState(null);\r\n    \r\n    const navigate = useNavigate();\r\n\r\n    const handleCheckBox = (e) => {\r\n        const [image] = photos.filter(photo =>  (photo.id === e.target.id));\r\n\r\n        if(e.target.checked === true) {\r\n            setPickedPhotos(photos => [...photos, image]);\r\n        } else {\r\n            const updatedPhotoArray = pickedPhotos.filter(photo =>  (photo.id !== e.target.id))\r\n            setPickedPhotos(updatedPhotoArray);\r\n        }\r\n    }\r\n\r\n    const handleEditAlbum = () => {\r\n        navigate(`/albums/edit-album/${albumId}`, {\r\n            state : {\r\n                photos,\r\n                albumTitle\r\n            }\r\n        })        \r\n    }\r\n\r\n    const handleDeletePhoto = async (e) => {\r\n\r\n        try {\r\n\r\n            //check the name of the photo\r\n            const doc = await db.collection('photos').doc(e.target.id).get();\r\n\r\n            //check if there are any more copies of the photo in the db\r\n            const querySnapshot = await db.collection(\"photos\")\r\n                .where('name', '==', doc.data().name)\r\n                .where('owner', '==', currentUser.uid)\r\n                .get()\r\n            \r\n            const snapshotPhotos = [];\r\n            querySnapshot.forEach(function(doc) {\r\n                console.log(doc.id, \" => \", doc.data());\r\n                snapshotPhotos.push(doc.id);\r\n            });\r\n            \r\n            console.log('this is snapshotPhotos', snapshotPhotos);\r\n\r\n            //delete the photo from the db\r\n            await db.collection('photos').doc(e.target.id).delete();\r\n            console.log('deleted photo from db');\r\n\r\n            //if it was the last copy of the photo, delete it from storage as well\r\n            if(snapshotPhotos.length < 2) {\r\n                await storage.ref(doc.data().path).delete();\r\n                console.log('this photo was the last one, now deleted file from storage');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log('this is error', error);\r\n            console.log('this is error.message', error.message);\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        setNewAlbumTitle(e.target.value);\r\n    }\r\n\r\n    const handleGenerateLink = () => {\r\n        setCustomerLink(`${window.location.origin}/${currentUser.uid}/review/${albumId}`);\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n\r\n        if(!newAlbumTitle) {\r\n            return;\r\n        }\r\n\r\n        if(pickedPhotos.length === 0){\r\n            return;\r\n        }\r\n\r\n        const album = {\r\n            albumTitle: newAlbumTitle,\r\n            owner: currentUser.uid,\r\n        }\r\n        \r\n        const promises = pickedPhotos.map(async pickedPhoto => {\r\n            setLoading(true);\r\n            try {\r\n                const photo = {\r\n                    name: pickedPhoto.name,\r\n                    albumTitle: newAlbumTitle,\r\n                    path: pickedPhoto.path,\r\n                    owner: currentUser.uid,\r\n                    fileUrl: pickedPhoto.fileUrl, \r\n                    type: pickedPhoto.type,\r\n                    size: pickedPhoto.size\r\n                }\r\n\r\n                const result = await db.collection('photos').add(photo);\r\n\r\n                return new Promise((resolve, reject) => {resolve(result)})\r\n\r\n            } catch(error) {\r\n                setError(error.message);\r\n                console.log('something went wrong', error);\r\n            }\r\n\r\n        })\r\n\r\n        Promise.all(promises)\r\n            .then(() => {\r\n                db.collection('albums').add(album)\r\n                .then(doc => {\r\n                    setPickedPhotos([]);\r\n                    setNewAlbumTitle('');\r\n                    navigate(`/albums/${doc.id}`);\r\n                });\r\n            }).catch (error => {\r\n                setError(error.message);\r\n            });\r\n    }\r\n    \r\n    return (  \r\n        <div className=\"text-center\">\r\n                <h1 className=\"text-center\">{albumTitle}</h1>\r\n\r\n                {\r\n                    photos.length !== 0 && (\r\n                        <Button className=\"my-3\" onClick={handleGenerateLink} variant=\"primary\">Generera kundlänk</Button>)\r\n                }\r\n                {\r\n                    customerLink && \r\n                    (\r\n                        <div className=\"my-4\">\r\n                            <a href={customerLink}>{customerLink}</a>\r\n                        </div>\r\n                        \r\n                    )\r\n                }\r\n\r\n                {\r\n                    loading\r\n                        ? (<div className=\"d-flex justify-content-center my-5\"><FadeLoader color={'#576675'} size={50}/></div>)\r\n                        \r\n                        : (\r\n                            <SRLWrapper>\r\n                                <Row className=\"mb-5\">\r\n                                    {photos.map(photo => (\r\n                                        <Photo photo={photo} key={photo.id} handleCheckBox={handleCheckBox} handleDeletePhoto={handleDeletePhoto}/>\r\n                                    ))}\r\n                                </Row>\r\n                            </SRLWrapper>\r\n                        )\r\n                }\r\n\r\n                {\r\n                    photos.length !== 0 && (\r\n                        <Row>\r\n                    <Col md={{ span: 6, offset: 3}}>\r\n                        <Form>\r\n                            <Form.Group>\r\n                                <Form.Label>Ange albumets titel:</Form.Label>\r\n                                <Form.Control type=\"name\" placeholder=\"Titel\" value={newAlbumTitle} onChange={handleInputChange}/>\r\n                            </Form.Group>\r\n                            <Button disabled={pickedPhotos.length === 0} onClick={handleSubmit}>Skapa nytt album</Button>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n                    )\r\n                }\r\n                \r\n\r\n                <Row>\r\n                    <Col md={{ span: 6, offset: 3}}>\r\n                        <Form>\r\n                            <Button className=\"my-4\" variant=\"secondary\" onClick={handleEditAlbum}>Redigera album</Button>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>  \r\n                \r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Album;","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\hooks\\useUploadAlbum.js",["122"],"import { db, storage } from '../firebase';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst useUploadAlbum = (albumTitle, uploadedFiles, submit) => {\r\n\r\n    const [error, setError ] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const { currentUser } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n\r\n        if(uploadedFiles.length === 0){\r\n            return;\r\n        }\r\n\r\n        const album = {\r\n            albumTitle,\r\n            owner: currentUser.uid,\r\n        }\r\n\r\n        const albumRef = storage.ref(`${albumTitle}`);\r\n\r\n        const promises = uploadedFiles.map(async uploadedFile => {\r\n            setLoading(true);\r\n\r\n            try {\r\n\r\n                const fileRef = albumRef.child(`/${uploadedFile.name}`);\r\n                const snapshot = await fileRef.put(uploadedFile);    \r\n                \r\n                const url = await snapshot.ref.getDownloadURL();\r\n\r\n                const photo = {\r\n                    name: uploadedFile.name,\r\n                    albumTitle,\r\n                    path: snapshot.ref.fullPath,\r\n                    owner: currentUser.uid,\r\n                    fileUrl: url, \r\n                    type: uploadedFile.type,\r\n                    size: uploadedFile.size\r\n                }\r\n\r\n                const result = await db.collection('photos').add(photo);\r\n\r\n                return new Promise((resolve, reject) => {resolve(result)})\r\n\r\n            } catch(error) {\r\n                setError(error.message);\r\n            }\r\n\r\n        })\r\n\r\n        Promise.all(promises)\r\n            .then(() => {\r\n                db.collection('albums').add(album)\r\n                .then(doc => {\r\n                    setLoading(false);\r\n                    navigate(`/albums/${doc.id}`);\r\n                });\r\n            }).catch (error => {\r\n                setError(error.message);\r\n            });\r\n\r\n    }, [submit]);\r\n\r\n    return { error, loading };\r\n}\r\n\r\nexport default useUploadAlbum;\r\n","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\hooks\\useAlbum.js",["123"],"import { useEffect, useState } from 'react';\r\nimport { db } from '../firebase';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst useAlbum = (albumId, user) => {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [photos, setPhotos] = useState([]);\r\n    const [albumTitle, setAlbumTitle] = useState('');\r\n    const navigate = useNavigate();\r\n    //console.log('validUser is', validUser);\r\n\r\n    useEffect(() => {\r\n        //subscribe to album snapshots from firebase to update component whenever something changes\r\n        db.collection('albums')\r\n        .doc(albumId)\r\n        .get().then(doc => {     \r\n            //console.log('this is doc.data()', doc.data());\r\n            if(doc.data().owner !== user) {\r\n                console.log('you are not a valid user');\r\n                navigate('/403');\r\n                return;\r\n\r\n            }\r\n            setAlbumTitle(doc.data().albumTitle)\r\n            const unsubscribe = db.collection('photos')\r\n            .where('albumTitle', '==', doc.data().albumTitle)\r\n            .where('owner', '==', user)\r\n            .onSnapshot( snapshot => {\r\n                console.log('this is snapshot', snapshot);\r\n                setLoading(true);\r\n                const snapshotPhotos = [];\r\n\r\n                snapshot.forEach(doc => {\r\n                    snapshotPhotos.push({\r\n                        id: doc.id,\r\n                        ...doc.data()\r\n                    });\r\n                });\r\n                setPhotos(snapshotPhotos);\r\n                setLoading(false);\r\n            })\r\n\r\n            return unsubscribe;\r\n        })\r\n\r\n    }, [albumId]);\r\n\r\n    return { albumTitle, loading, setLoading, photos };\r\n}\r\n \r\nexport default useAlbum;","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\CustomerPhoto.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\ShowPreviewCustomerAlbum.js",["124","125"],"import { useState } from 'react';\r\nimport { useParams, Link, useLocation } from 'react-router-dom';\r\nimport { Button, Row } from 'react-bootstrap';\r\nimport { SRLWrapper } from 'simple-react-lightbox';\r\nimport PreviewPhoto from './PreviewPhoto';\r\nimport { db } from '../firebase';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ShowPreviewCustomerAlbum = () => {\r\n    const { albumId, ownerId } = useParams();\r\n    const { state } = useLocation(); \r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError ] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    const newAlbumTitle = `${state.albumTitle} - kundvalda`;\r\n\r\n    const handleSubmitReviewedAlbum = () => {\r\n        const album = {\r\n            albumTitle: newAlbumTitle,\r\n            owner: ownerId,\r\n        }\r\n        \r\n        const promises = state.likedPhotos.map(async likedPhoto => {\r\n            setLoading(true);\r\n            try {\r\n                const photo = {\r\n                    name: likedPhoto.name,\r\n                    albumTitle: newAlbumTitle,\r\n                    path: likedPhoto.path,\r\n                    owner: ownerId,\r\n                    fileUrl: likedPhoto.fileUrl, \r\n                    type: likedPhoto.type,\r\n                    size: likedPhoto.size\r\n                }\r\n\r\n                const result = await db.collection('photos').add(photo);\r\n\r\n                return new Promise((resolve, reject) => {resolve(result)})\r\n\r\n            } catch(error) {\r\n                setError(error.message);\r\n                console.log('something went wrong', error);\r\n            }\r\n\r\n        })\r\n\r\n        Promise.all(promises)\r\n            .then(() => {\r\n                db.collection('albums').add(album)\r\n                .then(doc => {\r\n                    setLoading(false);\r\n                    navigate('/confirmation');\r\n                });\r\n            }).catch (error => {\r\n                setError(error.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <h1 className=\"text-center\">{newAlbumTitle}</h1>\r\n            <p>Du har valt {state.likedPhotos.length} {state.likedPhotos.length > 1 ? 'bilder' : 'bild'} av totalt {state.total}</p>\r\n\r\n            <SRLWrapper>\r\n                <h2>Valda bilder</h2>\r\n                <Row className=\"mb-5\">\r\n                        \r\n                        {\r\n                            state.likedPhotos.map(photo => (\r\n                                <PreviewPhoto photo={photo} key={photo.id} />\r\n                        ))}    \r\n                        \r\n                </Row>\r\n                        <h2>Bortvalda bilder</h2>\r\n                <Row className=\"mb-5\">\r\n                        {\r\n                            state.dislikedPhotos.map(photo => (\r\n                                <PreviewPhoto photo={photo} key={photo.id} />\r\n                        ))}  \r\n                        \r\n\r\n                </Row>\r\n                <Link to={`/${ownerId}/review/${albumId}`} className=\"btn btn-primary\">Redigera</Link>\r\n                <Button onClick={handleSubmitReviewedAlbum} variant=\"secondary\">Bekräfta</Button>\r\n            </SRLWrapper>\r\n                    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowPreviewCustomerAlbum;\r\n","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\PreviewPhoto.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\CustomerConfirmation.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\EditAlbum.js",["126","127","128","129","130","131","132","133"],"import { Alert, Button, Card, Col, Form, Row } from 'react-bootstrap';\r\nimport { FadeLoader } from 'react-spinners';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { db, storage } from '../firebase';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { useState, useCallback } from 'react';\r\nimport { Navigate, useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport { SRLWrapper } from 'simple-react-lightbox';\r\nimport Photo from './Photo';\r\n\r\n\r\nconst EditAlbum = () => {\r\n    const { state } = useLocation();\r\n    const { albumId } = useParams();\r\n    const [uploadedFiles, setUploadedFiles] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [newAlbumTitle, setNewAlbumTitle] = useState(state.albumTitle);\r\n    const { currentUser } = useAuth();\r\n    const [error, setError ] = useState(null);\r\n    const navigate = useNavigate();\r\n    console.log('this is albumId', albumId);\r\n\r\n    const handleCheckBox = (e) => {\r\n/*         const [image] = photos.filter(photo =>  (photo.id === e.target.id));\r\n\r\n        if(e.target.checked === true) {\r\n            setPickedPhotos(photos => [...photos, image]);\r\n        } else {\r\n            const updatedPhotoArray = pickedPhotos.filter(photo =>  (photo.id !== e.target.id))\r\n            setPickedPhotos(updatedPhotoArray);\r\n        } */\r\n    }\r\n\r\n    const handleChangeTitle = (e) => {\r\n        setNewAlbumTitle(e.target.value);\r\n    }\r\n\r\n    const handleSaveChanges = async (e) => {\r\n\r\n        if(newAlbumTitle !== state.albumTitle) {\r\n            try {\r\n                console.log('inside try');\r\n                await db.collection('albums').doc(albumId).update({\r\n                    albumTitle: newAlbumTitle\r\n                });\r\n    \r\n                Promise.all(state.photos.map(photo => {\r\n                    db.collection('photos').doc(photo.id).update({\r\n                        albumTitle: newAlbumTitle\r\n                    });\r\n                }))\r\n\r\n                navigate(`/albums/${albumId}`);\r\n    \r\n            } catch (error) {\r\n                console.log(error.message);\r\n            }\r\n        }\r\n            \r\n        if(uploadedFiles.length !==0) {\r\n\r\n            console.log('I have a file to upload');\r\n\r\n            const albumRef = storage.ref(`${newAlbumTitle}`);\r\n\r\n            const promises = uploadedFiles.map(async uploadedFile => {\r\n                setLoading(true);\r\n    \r\n                try {\r\n    \r\n                    const fileRef = albumRef.child(`/${uploadedFile.name}`);\r\n                    const snapshot = await fileRef.put(uploadedFile);    \r\n                    \r\n                    const url = await snapshot.ref.getDownloadURL();\r\n    \r\n                    const photo = {\r\n                        name: uploadedFile.name,\r\n                        albumTitle: newAlbumTitle,\r\n                        path: snapshot.ref.fullPath,\r\n                        owner: currentUser.uid,\r\n                        fileUrl: url, \r\n                        type: uploadedFile.type,\r\n                        size: uploadedFile.size\r\n                    }\r\n\r\n                    await db.collection('photos').add(photo);\r\n                    navigate(`/albums/${albumId}`);\r\n                    return;\r\n    \r\n                } catch(error) {\r\n                    setError(error.message);\r\n                }\r\n    \r\n            })\r\n            \r\n        }\r\n        \r\n        navigate(`/albums/${albumId}`);\r\n    }\r\n\r\n    //Dropzone\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        if(acceptedFiles.length === 0){\r\n            return;\r\n        }\r\n       \r\n        setUploadedFiles(files => [...files, acceptedFiles[0]]);\r\n\r\n    }, []);\r\n\r\n    const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone({\r\n        accept: 'image/jpeg, image/png',\r\n        onDrop\r\n    });\r\n\r\n    return (  \r\n        <div>\r\n            <h1 className=\"text-center my-4\">Redigera album</h1>\r\n\r\n            <Row className=\"my-4\">\r\n                <Col md={{ span: 6, offset: 3}}>\r\n                    <Form>\r\n                        <Form.Group>\r\n                            <Form.Label>Ny albumtitel:</Form.Label>\r\n                            <Form.Control type=\"name\" placeholder=\"Titel\" value={newAlbumTitle} onChange={handleChangeTitle}/>\r\n\r\n                            <div {...getRootProps()} id=\"dropzone-wrapper\" className={`px-4 py-4 my-3 ${isDragAccept ? `drag-accept` : ``} ${isDragReject ? `drag-reject` : ``}`}>\r\n                                <input {...getInputProps()} />\r\n                                    {\r\n                                        isDragActive \r\n                                            ? isDragAccept \r\n                                                ? (<p>Just drop it already</p>) \r\n                                                : (<p>Sorry, not the right file type</p>)\r\n                                            : (<p>Give me some filez</p>) \r\n                                    }      \r\n                            </div>\r\n\r\n                            \r\n                        </Form.Group>\r\n\r\n                        {\r\n                                uploadedFiles && uploadedFiles.length !== 0 && (\r\n                                    <div className=\"accepted-files mt-2\">\r\n                                        <ul className=\"list-unstyled\">\r\n                                            {uploadedFiles.map(file => (\r\n                                                <li key={file.name}>\r\n                                                    {file.name}\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>   \r\n                                    </div>\r\n                                )\r\n                            } \r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n\r\n            <SRLWrapper>\r\n                <Row className=\"mb-5\">\r\n                    {state.photos.map(photo => (\r\n                        <Photo photo={photo} key={photo.id} onChange={handleCheckBox}/>\r\n                    ))}\r\n                </Row>\r\n            </SRLWrapper>\r\n\r\n\r\n            <div className=\"text-center\">\r\n                <Button className=\"px-5\" onClick={handleSaveChanges}>Spara</Button>\r\n            </div>\r\n                                \r\n        </div>\r\n\r\n    );\r\n}\r\n \r\nexport default EditAlbum;","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\AccessDenied.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":39,"column":56,"nodeType":"140","messageId":"141","endLine":39,"endColumn":69},{"ruleId":"138","severity":1,"message":"142","line":17,"column":12,"nodeType":"140","messageId":"141","endLine":17,"endColumn":26},{"ruleId":"134","replacedBy":"143"},{"ruleId":"136","replacedBy":"144"},{"ruleId":"138","severity":1,"message":"145","line":21,"column":12,"nodeType":"140","messageId":"141","endLine":21,"endColumn":17},{"ruleId":"146","severity":1,"message":"147","line":67,"column":8,"nodeType":"148","endLine":67,"endColumn":16,"suggestions":"149"},{"ruleId":"146","severity":1,"message":"150","line":47,"column":8,"nodeType":"148","endLine":47,"endColumn":17,"suggestions":"151"},{"ruleId":"138","severity":1,"message":"152","line":12,"column":12,"nodeType":"140","messageId":"141","endLine":12,"endColumn":19},{"ruleId":"138","severity":1,"message":"145","line":13,"column":12,"nodeType":"140","messageId":"141","endLine":13,"endColumn":17},{"ruleId":"138","severity":1,"message":"153","line":1,"column":10,"nodeType":"140","messageId":"141","endLine":1,"endColumn":15},{"ruleId":"138","severity":1,"message":"154","line":1,"column":25,"nodeType":"140","messageId":"141","endLine":1,"endColumn":29},{"ruleId":"138","severity":1,"message":"155","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":20},{"ruleId":"138","severity":1,"message":"156","line":7,"column":10,"nodeType":"140","messageId":"141","endLine":7,"endColumn":18},{"ruleId":"138","severity":1,"message":"152","line":16,"column":12,"nodeType":"140","messageId":"141","endLine":16,"endColumn":19},{"ruleId":"138","severity":1,"message":"145","line":19,"column":12,"nodeType":"140","messageId":"141","endLine":19,"endColumn":17},{"ruleId":"157","severity":1,"message":"158","line":47,"column":52,"nodeType":"159","messageId":"160","endLine":47,"endColumn":54},{"ruleId":"138","severity":1,"message":"161","line":66,"column":19,"nodeType":"140","messageId":"141","endLine":66,"endColumn":27},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'acceptedFiles' is assigned a value but never used.","Identifier","unusedVar","'disLikedPhotos' is assigned a value but never used.",["162"],["163"],"'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'albumTitle', 'currentUser.uid', 'navigate', and 'uploadedFiles'. Either include them or remove the dependency array.","ArrayExpression",["164"],"React Hook useEffect has missing dependencies: 'navigate' and 'user'. Either include them or remove the dependency array.",["165"],"'loading' is assigned a value but never used.","'Alert' is defined but never used.","'Card' is defined but never used.","'FadeLoader' is defined but never used.","'Navigate' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'promises' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [albumTitle, currentUser.uid, navigate, submit, uploadedFiles]",{"range":"170","text":"171"},"Update the dependencies array to be: [albumId, navigate, user]",{"range":"172","text":"173"},[2019,2027],"[albumTitle, currentUser.uid, navigate, submit, uploadedFiles]",[1621,1630],"[albumId, navigate, user]"]