[{"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\index.js":"1","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\App.js":"2","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\NavigationBar.js":"3","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Home.js":"4","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\SignUp.js":"5","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\NotFound.js":"6","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\contexts\\AuthContext.js":"7","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\firebase\\index.js":"8","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\AuthRoute.js":"9","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Login.js":"10","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Logout.js":"11","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Albums.js":"12","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\CreateAlbum.js":"13","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\CustomerAlbum.js":"14","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Photo.js":"15","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\hooks\\useAlbums.js":"16","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Album.js":"17","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\hooks\\useUploadAlbum.js":"18","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\hooks\\useAlbum.js":"19","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\CustomerPhoto.js":"20","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\ShowPreviewCustomerAlbum.js":"21","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\PreviewPhoto.js":"22","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\CustomerConfirmation.js":"23","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\EditAlbum.js":"24","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\AccessDenied.js":"25"},{"size":282,"mtime":1609782889788,"results":"26","hashOfConfig":"27"},{"size":2221,"mtime":1610653762631,"results":"28","hashOfConfig":"27"},{"size":2316,"mtime":1610572532121,"results":"29","hashOfConfig":"27"},{"size":581,"mtime":1610653342317,"results":"30","hashOfConfig":"27"},{"size":2964,"mtime":1610653573774,"results":"31","hashOfConfig":"27"},{"size":782,"mtime":1610560568693,"results":"32","hashOfConfig":"27"},{"size":1385,"mtime":1610653643950,"results":"33","hashOfConfig":"27"},{"size":720,"mtime":1610631912611,"results":"34","hashOfConfig":"27"},{"size":336,"mtime":1609851866946,"results":"35","hashOfConfig":"27"},{"size":2994,"mtime":1610653436617,"results":"36","hashOfConfig":"27"},{"size":506,"mtime":1609860024180,"results":"37","hashOfConfig":"27"},{"size":6682,"mtime":1610652261261,"results":"38","hashOfConfig":"27"},{"size":4052,"mtime":1610652431925,"results":"39","hashOfConfig":"27"},{"size":3258,"mtime":1610660352487,"results":"40","hashOfConfig":"27"},{"size":975,"mtime":1610613021565,"results":"41","hashOfConfig":"27"},{"size":1114,"mtime":1610650249981,"results":"42","hashOfConfig":"27"},{"size":7097,"mtime":1610652307704,"results":"43","hashOfConfig":"27"},{"size":2064,"mtime":1610624652254,"results":"44","hashOfConfig":"27"},{"size":1604,"mtime":1610650215920,"results":"45","hashOfConfig":"27"},{"size":1675,"mtime":1610656425701,"results":"46","hashOfConfig":"27"},{"size":3333,"mtime":1610660178373,"results":"47","hashOfConfig":"27"},{"size":462,"mtime":1610568599022,"results":"48","hashOfConfig":"27"},{"size":596,"mtime":1610652683192,"results":"49","hashOfConfig":"27"},{"size":5873,"mtime":1610653262988,"results":"50","hashOfConfig":"27"},{"size":260,"mtime":1610613755252,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1pkc9nl",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\index.js",[],["108","109"],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\App.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\NavigationBar.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Home.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\SignUp.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\NotFound.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\contexts\\AuthContext.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\firebase\\index.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\AuthRoute.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Login.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Logout.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Albums.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\CreateAlbum.js",["110","111"],"import { Alert, Button, Card, Col, Form, Row } from 'react-bootstrap';\r\nimport { FadeLoader } from 'react-spinners';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { useState, useCallback } from 'react';\r\nimport useUploadAlbum from '../hooks/useUploadAlbum';\r\n\r\nconst CreateAlbum = () => {\r\n\r\n    const [uploadedFiles, setUploadedFiles] = useState([]);\r\n    const [submit, setSubmit] = useState(null);\r\n    \r\n    const [albumTitle, setAlbumTitle] = useState('');\r\n    const { error, loading } = useUploadAlbum(albumTitle, uploadedFiles, submit);\r\n\r\n\r\n    const handleChangeTitle = (e) => {\r\n        setAlbumTitle(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if(uploadedFiles.length === 0){\r\n            return;\r\n        }\r\n        setSubmit(true);\r\n        \r\n    }\r\n\r\n    //Dropzone\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        if(acceptedFiles.length === 0){\r\n            return;\r\n        }\r\n       \r\n        setUploadedFiles(files => [...files, acceptedFiles[0]]);\r\n\r\n    }, []);\r\n\r\n    const { getRootProps, getInputProps, isDragActive, acceptedFiles, isDragAccept, isDragReject } = useDropzone({\r\n        accept: 'image/jpeg, image/png',\r\n        onDrop\r\n    });\r\n\r\n    return (  \r\n        <div>\r\n\r\n            {\r\n                loading && (<div className=\"d-flex justify-content-center my-5\"><FadeLoader color={'#576675'} size={50}/></div>)\r\n            }\r\n            \r\n            <div className=\"edit-album\">\r\n                <h1 className=\"text-center my-4\">Skapa album</h1>\r\n\r\n                <Row className=\"my-4\">\r\n                    <Col md={{ span: 6, offset: 3}}>\r\n\r\n                        { error && (<Alert variant=\"danger\">{error}</Alert>) }\r\n\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group id=\"title\">\r\n                                <Form.Label>Albumtitel:</Form.Label>\r\n                                <Form.Control type=\"title\" placeholder=\"Titel\" value={albumTitle} required onChange={handleChangeTitle}/>\r\n\r\n                                <div {...getRootProps()} id=\"dropzone-wrapper\" className={`px-4 py-4 my-3 ${isDragAccept ? `drag-accept` : ``} ${isDragReject ? `drag-reject` : ``}`}>\r\n                                    <input {...getInputProps()} />\r\n                                        {\r\n                                            isDragActive \r\n                                                ? isDragAccept \r\n                                                    ? (<p>Just drop it already</p>) \r\n                                                    : (<p>Sorry, not the right file type</p>)\r\n                                                : (<p>Give me some files</p>) \r\n                                        }      \r\n                                </div>\r\n\r\n                            </Form.Group>\r\n\r\n                            {\r\n                                    uploadedFiles && uploadedFiles.length !== 0 && (\r\n                                        <div className=\"accepted-files mt-2\">\r\n                                            <ul className=\"list-unstyled\">\r\n                                                {uploadedFiles.map(file => (\r\n                                                    <li key={file.name}>\r\n                                                        {file.name}\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>   \r\n                                        </div>\r\n                                    )\r\n                                } \r\n\r\n                                <div className=\"text-center\">\r\n                                    <Button disabled={loading} type=\"submit\" className=\"px-5\">Skapa album</Button>\r\n                                </div>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default CreateAlbum;","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\CustomerAlbum.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Photo.js",["112"],"import { Button, Card, Col, Form  } from 'react-bootstrap';\r\n\r\nconst Photo = ({photo, handleCheckBox, handleDeletePhoto}) => {\r\n\r\n    return (  \r\n        <Col sm={6} md={4} lg={3}>                                \r\n            <Card className=\"mb-3\">\r\n                <a href={photo.fileUrl} title=\"View image\" data-attribute=\"SRL\">\r\n                    <Card.Img variant=\"top\" src={photo.fileUrl}/>\r\n                </a>\r\n                <Card.Body>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formBasicCheckbox\">\r\n                            <Form.Check id=\"checkbox-text\" type=\"checkbox\" label=\"Välj\" onChange={(e) => handleCheckBox(e)} id={photo.id}/>\r\n                        </Form.Group>\r\n                    </Form>\r\n\r\n                    <Button variant=\"danger\" size=\"sm\" onClick={handleDeletePhoto} id={photo.id}>Radera</Button>\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n    );\r\n}\r\n \r\nexport default Photo;","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\hooks\\useAlbums.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\Album.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\hooks\\useUploadAlbum.js",["113"],"import { db, storage } from '../firebase';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst useUploadAlbum = (albumTitle, uploadedFiles, submit) => {\r\n\r\n    const [error, setError ] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const { currentUser } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n\r\n        if(uploadedFiles.length === 0){\r\n            return;\r\n        }\r\n\r\n        const album = {\r\n            albumTitle,\r\n            owner: currentUser.uid,\r\n        }\r\n\r\n        const promises = uploadedFiles.map(async uploadedFile => {\r\n            setLoading(true);\r\n\r\n            try {\r\n\r\n                const fileRef = storage.ref(`images/${currentUser.uid}/${uploadedFile.name}`);\r\n                const snapshot = await fileRef.put(uploadedFile);    \r\n                \r\n                const url = await snapshot.ref.getDownloadURL();\r\n\r\n                const photo = {\r\n                    name: uploadedFile.name,\r\n                    albumTitle,\r\n                    path: snapshot.ref.fullPath,\r\n                    owner: currentUser.uid,\r\n                    fileUrl: url, \r\n                    type: uploadedFile.type,\r\n                    size: uploadedFile.size\r\n                }\r\n\r\n                const result = await db.collection('photos').add(photo);\r\n\r\n                return new Promise((resolve, reject) => {resolve(result)})\r\n\r\n            } catch(error) {\r\n                setError(error.message);\r\n            }\r\n\r\n        })\r\n\r\n        Promise.all(promises)\r\n            .then(() => {\r\n                db.collection('albums').add(album)\r\n                .then(doc => {\r\n                    setLoading(false);\r\n                    navigate(`/albums/${doc.id}`);\r\n                });\r\n            }).catch (error => {\r\n                setError(error.message);\r\n            });\r\n\r\n    }, [submit]);\r\n\r\n    return { error, loading };\r\n}\r\n\r\nexport default useUploadAlbum;","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\hooks\\useAlbum.js",["114"],"import { useEffect, useState } from 'react';\r\nimport { db } from '../firebase';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst useAlbum = (albumId, user) => {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [photos, setPhotos] = useState([]);\r\n    const [albumTitle, setAlbumTitle] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        //subscribe to album snapshots from firebase to update component whenever something changes\r\n        db.collection('albums')\r\n        .doc(albumId)\r\n        .get().then(doc => {     \r\n\r\n            //check if the user owns the album\r\n            if(doc.data().owner !== user) {\r\n                navigate('/403');\r\n                return;\r\n\r\n            }\r\n            setAlbumTitle(doc.data().albumTitle)\r\n            const unsubscribe = db.collection('photos')\r\n                .where('albumTitle', '==', doc.data().albumTitle)\r\n                .where('owner', '==', user)\r\n                .onSnapshot( snapshot => {\r\n\r\n                    setLoading(true);\r\n                    const snapshotPhotos = [];\r\n\r\n                    snapshot.forEach(doc => {\r\n                        snapshotPhotos.push({\r\n                            id: doc.id,\r\n                            ...doc.data()\r\n                        });\r\n                    });\r\n                    setPhotos(snapshotPhotos);\r\n                    setLoading(false);\r\n                })\r\n\r\n            return unsubscribe;\r\n        })\r\n\r\n    }, [albumId]);\r\n\r\n    return { albumTitle, loading, setLoading, photos };\r\n}\r\n \r\nexport default useAlbum;","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\CustomerPhoto.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\ShowPreviewCustomerAlbum.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\PreviewPhoto.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\CustomerConfirmation.js",[],"C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\EditAlbum.js",["115","116"],"import { Alert, Button, Col, Form, Row } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { db, storage } from '../firebase';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { useState, useCallback } from 'react';\r\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport { SRLWrapper } from 'simple-react-lightbox';\r\nimport Photo from './Photo';\r\n\r\nconst EditAlbum = () => {\r\n    const navigate = useNavigate();\r\n    const { state } = useLocation();\r\n    const { albumId } = useParams();\r\n    const { currentUser } = useAuth();\r\n    const [uploadedFiles, setUploadedFiles] = useState([]);\r\n    const [newAlbumTitle, setNewAlbumTitle] = useState(state.albumTitle);\r\n    const [error, setError ] = useState(null);\r\n\r\n    const handleChangeTitle = (e) => {\r\n        setNewAlbumTitle(e.target.value);\r\n    }\r\n\r\n    const handleSaveChanges = async (e) => {\r\n\r\n        //check if there is a new album title\r\n        if(newAlbumTitle !== state.albumTitle) {\r\n            try {\r\n                await db.collection('albums').doc(albumId).update({\r\n                    albumTitle: newAlbumTitle\r\n                });\r\n    \r\n                Promise.all(state.photos.map(photo => {\r\n                    db.collection('photos').doc(photo.id).update({\r\n                        albumTitle: newAlbumTitle\r\n                    });\r\n                }))\r\n\r\n                navigate(`/albums/${albumId}`);\r\n                return;\r\n    \r\n            } catch (error) {\r\n                setError(error.message);\r\n            }\r\n        }\r\n            \r\n        //check if the user uploaded some photos\r\n        if(uploadedFiles.length !==0) {\r\n\r\n            const promises = uploadedFiles.map(async uploadedFile => {\r\n    \r\n                try {\r\n    \r\n                    const fileRef = storage.ref(`images/${currentUser.uid}/${uploadedFile.name}`);\r\n                    \r\n                    const snapshot = await fileRef.put(uploadedFile);    \r\n                    \r\n                    const url = await snapshot.ref.getDownloadURL();\r\n    \r\n                    const photo = {\r\n                        name: uploadedFile.name,\r\n                        albumTitle: newAlbumTitle,\r\n                        path: snapshot.ref.fullPath,\r\n                        owner: currentUser.uid,\r\n                        fileUrl: url, \r\n                        type: uploadedFile.type,\r\n                        size: uploadedFile.size\r\n                    }\r\n\r\n                    await db.collection('photos').add(photo);\r\n                    navigate(`/albums/${albumId}`);\r\n                    return;\r\n    \r\n                } catch(error) {\r\n                    setError(error.message);\r\n                }\r\n    \r\n            })\r\n            \r\n        }\r\n        \r\n        navigate(`/albums/${albumId}`);\r\n    }\r\n\r\n    //Dropzone\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        if(acceptedFiles.length === 0){\r\n            return;\r\n        }\r\n       \r\n        setUploadedFiles(files => [...files, acceptedFiles[0]]);\r\n\r\n    }, []);\r\n\r\n    const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone({\r\n        accept: 'image/jpeg, image/png',\r\n        onDrop\r\n    });\r\n\r\n    return (  \r\n        <div className=\"edit-album\">\r\n            <h1 className=\"text-center my-4\">Redigera album</h1>\r\n\r\n            <Row className=\"my-4\">\r\n                <Col md={{ span: 6, offset: 3}}>\r\n                    <Form>\r\n                        <Form.Group>\r\n                            <Form.Label>Ny albumtitel:</Form.Label>\r\n                            <Form.Control type=\"name\" placeholder=\"Titel\" value={newAlbumTitle} onChange={handleChangeTitle}/>\r\n\r\n                            <div {...getRootProps()} id=\"dropzone-wrapper\" className={`px-4 py-4 my-3 ${isDragAccept ? `drag-accept` : ``} ${isDragReject ? `drag-reject` : ``}`}>\r\n                                <input {...getInputProps()} />\r\n                                    {\r\n                                        isDragActive \r\n                                            ? isDragAccept \r\n                                                ? (<p>Just drop it already</p>) \r\n                                                : (<p>Sorry, not the right file type</p>)\r\n                                            : (<p>Give me some files</p>) \r\n                                    }      \r\n                            </div>\r\n\r\n                        </Form.Group>\r\n\r\n                        {\r\n                                uploadedFiles && uploadedFiles.length !== 0 && (\r\n                                    <div className=\"accepted-files mt-2\">\r\n                                        <ul className=\"list-unstyled\">\r\n                                            {uploadedFiles.map(file => (\r\n                                                <li key={file.name}>\r\n                                                    {file.name}\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>   \r\n                                    </div>\r\n                                )\r\n                            } \r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n\r\n            <SRLWrapper>\r\n                <Row className=\"mb-5\">\r\n                    {state.photos.map(photo => (\r\n                        <Photo photo={photo} key={photo.id}/>\r\n                    ))}\r\n                </Row>\r\n            </SRLWrapper>\r\n\r\n\r\n            <div className=\"text-center\">\r\n                <Button className=\"px-5\" onClick={handleSaveChanges}>Spara</Button>\r\n            </div>\r\n\r\n            {error && (<Alert variant=\"danger\">{error}</Alert>)}\r\n                                \r\n        </div>\r\n\r\n    );\r\n}\r\n \r\nexport default EditAlbum;","C:\\Program Files\\Ampps\\www\\javascript-2\\my-favourite-photos\\src\\components\\AccessDenied.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":1,"column":25,"nodeType":"123","messageId":"124","endLine":1,"endColumn":29},{"ruleId":"121","severity":1,"message":"125","line":40,"column":56,"nodeType":"123","messageId":"124","endLine":40,"endColumn":69},{"ruleId":"126","severity":1,"message":"127","line":14,"column":125,"nodeType":"128","endLine":14,"endColumn":138},{"ruleId":"129","severity":1,"message":"130","line":65,"column":8,"nodeType":"131","endLine":65,"endColumn":16,"suggestions":"132"},{"ruleId":"129","severity":1,"message":"133","line":46,"column":8,"nodeType":"131","endLine":46,"endColumn":17,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":32,"column":52,"nodeType":"137","messageId":"138","endLine":32,"endColumn":54},{"ruleId":"121","severity":1,"message":"139","line":49,"column":19,"nodeType":"123","messageId":"124","endLine":49,"endColumn":27},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'acceptedFiles' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'albumTitle', 'currentUser.uid', 'navigate', and 'uploadedFiles'. Either include them or remove the dependency array.","ArrayExpression",["142"],"React Hook useEffect has missing dependencies: 'navigate' and 'user'. Either include them or remove the dependency array.",["143"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'promises' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [albumTitle, currentUser.uid, navigate, submit, uploadedFiles]",{"range":"148","text":"149"},"Update the dependencies array to be: [albumId, navigate, user]",{"range":"150","text":"151"},[1983,1991],"[albumTitle, currentUser.uid, navigate, submit, uploadedFiles]",[1502,1511],"[albumId, navigate, user]"]